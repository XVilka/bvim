Directions
===========================

1. Add C-syntax structures parsing and searching (high priority)
   -- IN PROGRESS
2. Add hex-data folding support (or lines, or blocks)
3. Add GZIP, ZIP, TAR, etc signatures to search and highlight
4. Add :unmap (:unm) feature
   -- IN PROGRESS
5. Add :split feature (low priority)
6. Add binary diff mode
7. Templates support (high priority)
8. Add support for 8-bit, 16-bit, 32-bit, 64-bit and 128-bit modes
9. Add support for big-endian and little-endian
10. Add signature search for executable code and file headers
12. Add tabs for various buffers
13. Add tools tabs (e.g. for templates, history, etc)
14. Implement lua REPL console
    -- 90% done
15. Implement network team work support (like PiratePad, Gobby/infinoted)
16. Add terminal resizing support

Simple tasks
============================

1. Rename project to "bvim"
2. Add history of commands
   -- 90% done
3. Blocks commands:
	a) block-save to separate file
	b) block-reverse
	c) blocks list
	d) blocks send to disasm
4. Add lua events:
	a) cursor move back, forward, up and down
	b) cursor on some block
5. Add scrolling in tools window (with keys and from lua) (HIGH PRIORITY!)
6. Add checks of terminal color mode
7. Add normal keymapping with keys names
	-- 90% done
8. Implement block parameter as bitfields (folding, highlighting, color, etc) (LOW PRIORITY)
9. All operations (XOR, AND, etc) must support hexadecimal arguments
	-- IN PROGRESS
10. Prevent blocks overlapping
    -- 90% done
11. Add folding empty and repeating data sequences
12. Implement "universal" CRC poly/gen calculator, with ability setup generator poly from lua
    -- 80% done
13. Add C plugins api, with ability for register lua functions, events, keymaps and :commands
    -- IN PROGRESS
14. Add lua/plugins hooks into standard handler_* and command_*
15. Add block and symbol annotations - show when place cursor on it
16. Add possibility to :run <script> with full file path to script
17. Move functions from bvi.* lua module to dynamic list
	-- 90% done

Refactoring Tasks
============================

1. Split out math and logic functions in math.c (and/xor/etc)
   -- IN PROGRESS
2. Implement Core and Editor objects/structures
	-- 90% done
3. Convert editor output to editor container (for support splitting/diff features)
4. Eliminate DOS stuff
	-- 90% done
5. Add file stream object for supporting continious and large files
6. Split all output to another file console.c, add unified API for GUI
	-- IN PROGRESS
7. Add doxygen documentation

Not needed to refactor:
 keys.c
 keys.h
 bscript.c
 bscript.h
 blocks.c
 blocks.h
